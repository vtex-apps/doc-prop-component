"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const error_1 = require("../../utils/error");
const production = process.env.VTEX_PRODUCTION === 'true';
const app = process.env.VTEX_APP_ID;
const EMPTY_MESSAGE = 'Logger.log was called with null or undefined message';
var LogLevel;
(function (LogLevel) {
    LogLevel["Debug"] = "debug";
    LogLevel["Info"] = "info";
    LogLevel["Warn"] = "warn";
    LogLevel["Error"] = "error";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
class Logger {
    constructor(ctx) {
        this.debug = (message) => this.log(message, LogLevel.Debug);
        this.info = (message) => this.log(message, LogLevel.Info);
        this.warn = (warning) => this.log(warning, LogLevel.Warn);
        this.error = (error) => this.log(error, LogLevel.Error);
        this.log = (message, level) => {
            const data = message ? error_1.cleanError(message) : EMPTY_MESSAGE;
            /* tslint:disable:object-literal-sort-keys */
            console.log(JSON.stringify({
                __VTEX_IO_LOG: true,
                level,
                app,
                account: this.account,
                workspace: this.workspace,
                production,
                data,
                operationId: this.operationId,
                requestId: this.requestId,
            }));
        };
        this.account = ctx.account;
        this.workspace = ctx.workspace;
        this.requestId = ctx.requestId;
        this.operationId = ctx.operationId;
    }
}
exports.Logger = Logger;
