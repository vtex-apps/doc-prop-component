import { AppGraphQLClient, InstanceOptions } from '../HttpClient';
import { IOContext } from '../service/typings';
import { IOMessage } from '../utils/message';
declare type IOMessageInput = Pick<IOMessage, 'id' | 'content' | 'description' | 'behavior'>;
interface MessagesInput {
    provider: string;
    messages: IOMessageInput[];
}
export interface IOMessageSaveInput extends IOMessageInput {
    content: string;
}
export interface Translate {
    messages: MessagesInput[];
    from?: string;
    to: string;
}
export interface SaveArgs {
    to: string;
    messagesByProvider: Array<{
        messages: IOMessageSaveInput[];
        provider: string;
    }>;
}
export declare class MessagesGraphQL extends AppGraphQLClient {
    constructor(vtex: IOContext, options?: InstanceOptions);
    translate: (args: Translate) => Promise<string[]>;
    save: (args: SaveArgs) => Promise<boolean>;
}
export {};
